name: Release artifacts
on:
  push:
    tags:
      - v*

jobs:
  build_linux_android:
    name: Build Linux + Android
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2

      - name: Configure git to use HTTPS
        run: git config --global url."https://${{ secrets.REPO_ACCESS_TOKEN }}:x-oauth-basic@github.com".insteadOf ssh://git@github.com

      - name: Install pre-requisites
        run: |
          sudo apt-get update && sudo apt-get install -y crossbuild-essential-arm64 crossbuild-essential-i386
          cargo install --version=1.0.0 cargo-ndk
          rustup target add armv7-linux-androideabi aarch64-linux-android i686-linux-android x86_64-linux-android aarch64-unknown-linux-gnu i686-unknown-linux-gnu

      - name: Build Android
        run: |
          cargo ndk --target aarch64-linux-android --platform 21 -- build --release
          cargo ndk --target armv7-linux-androideabi --platform 19 -- build --release
          cargo ndk --target i686-linux-android --platform 19 -- build --release
          cargo ndk --target x86_64-linux-android --platform 21 -- build --release
          find ./target -name libzkgroup.so | xargs zip libzkgroup-android.zip
        env:
          RUSTFLAGS: -C link-arg=-s
          ANDROID_SDK_ROOT: /usr/local/lib/android/sdk/
          ANDROID_NDK_HOME: /usr/local/lib/android/sdk/ndk-bundle/

      - name: Read .nvmrc
        id: node_version
        working-directory: ffi/node
        run: echo ::set-output name=NODE_VERSION::$(cat .nvmrc)

      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: '${{ steps.node_version.outputs.NODE_VERSION }}'

      - name: Build Linux
        working-directory: ffi/node
        run: |
          npm --version
          node --version
          make libzkgroup CARGO_TARGET=x86_64-unknown-linux-gnu NODE_ARCH=x64
          make libzkgroup CARGO_TARGET=aarch64-unknown-linux-gnu NODE_ARCH=arm64
          make libzkgroup CARGO_TARGET=i686-unknown-linux-gnu NODE_ARCH=ia32

      - name: Upload Android
        uses: svenstaro/upload-release-action@v1-release
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: libzkgroup-android.zip
          asset_name: libzkgroup-android.zip
          tag: ${{ github.ref }}
          overwrite: true

      - name: Upload Linux x64
        uses: svenstaro/upload-release-action@v1-release
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ffi/node/libzkgroup-x64.so
          asset_name: libzkgroup-x64.so
          tag: ${{ github.ref }}
          overwrite: true

      - name: Upload Linux ia32
        uses: svenstaro/upload-release-action@v1-release
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ffi/node/libzkgroup-ia32.so
          asset_name: libzkgroup-ia32.so
          tag: ${{ github.ref }}
          overwrite: true

      - name: Upload Linux arm64
        uses: svenstaro/upload-release-action@v1-release
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ffi/node/libzkgroup-arm64.so
          asset_name: libzkgroup-arm64.so
          tag: ${{ github.ref }}
          overwrite: true

  build_windows:
    name: Build Windows
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2

      - name: Configure git to use HTTPS
        run: git config --global url."https://${{ secrets.REPO_ACCESS_TOKEN }}:x-oauth-basic@github.com".insteadOf ssh://git@github.com

      - name: Read .nvmrc
        id: node_version
        working-directory: ffi/node
        run: echo "::set-output name=NODE_VERSION::$(cat .nvmrc)"

      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: '${{ steps.node_version.outputs.NODE_VERSION }}'

      - name: Build
        working-directory: ffi/node
        run: |
          npm --version
          node --version
          rustup target add i686-pc-windows-msvc
          rustup target add aarch64-pc-windows-msvc
          make libzkgroup CARGO_TARGET=x86_64-pc-windows-msvc NODE_ARCH=x64
          make libzkgroup CARGO_TARGET=aarch64-pc-windows-msvc NODE_ARCH=arm64
          make libzkgroup CARGO_TARGET=i686-pc-windows-msvc NODE_ARCH=ia32
      
      - name: Upload ia32
        uses: svenstaro/upload-release-action@v1-release
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ffi/node/libzkgroup-ia32.dll
          asset_name: libzkgroup-ia32.dll
          tag: ${{ github.ref }}
          overwrite: true

      - name: Upload x64
        uses: svenstaro/upload-release-action@v1-release
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ffi/node/libzkgroup-x64.dll
          asset_name: libzkgroup-x64.dll
          tag: ${{ github.ref }}
          overwrite: true

      - name: Upload arm64
        uses: svenstaro/upload-release-action@v1-release
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ffi/node/libzkgroup-arm64.dll
          asset_name: libzkgroup-arm64.dll
          tag: ${{ github.ref }}
          overwrite: true

  build_macOS_iOS:
    name: Build macOS + iOS
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2

      - name: Configure git to use HTTPS
        run: git config --global url."https://${{ secrets.REPO_ACCESS_TOKEN }}:x-oauth-basic@github.com".insteadOf ssh://git@github.com

      - name: Install pre-requisites
        run: |
          rustup target add aarch64-apple-ios x86_64-apple-ios aarch64-apple-darwin
          cd ffi/swift
          make install_build_dependencies

      - name: Read .nvmrc
        id: node_version
        working-directory: ffi/node
        run: echo ::set-output name=NODE_VERSION::$(cat .nvmrc)

      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: '${{ steps.node_version.outputs.NODE_VERSION }}'

      - name: Build
        env:
          # Needed until hosted macos-11.0 runners become available
          SDKROOT: /Library/Developer/CommandLineTools/SDKs/MacOSX11.1.sdk
        run: |
          npm --version
          node --version
          cd ffi/node
          make libzkgroup CARGO_TARGET=x86_64-apple-darwin NODE_ARCH=x64
          make libzkgroup CARGO_TARGET=aarch64-apple-darwin NODE_ARCH=arm64
          cd ../../ffi/swift
          make
          cd ZKGroup
          zip -r libzkgroup-ios.zip libzkgroup

      - name: Upload macOS x64
        uses: svenstaro/upload-release-action@v1-release
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ffi/node/libzkgroup-x64.dylib
          asset_name: libzkgroup-x64.dylib
          tag: ${{ github.ref }}
          overwrite: true
      
      - name: Upload macOS arm64
        uses: svenstaro/upload-release-action@v1-release
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ffi/node/libzkgroup-arm64.dylib
          asset_name: libzkgroup-arm64.dylib
          tag: ${{ github.ref }}
          overwrite: true

      - name: Upload iOS
        uses: svenstaro/upload-release-action@v1-release
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ffi/swift/ZKGroup/libzkgroup-ios.zip
          asset_name: libzkgroup-ios.zip
          tag: ${{ github.ref }}
          overwrite: true
